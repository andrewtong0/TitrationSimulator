<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initialization
randomize();
global.max_molarity = 2;
global.min_molarity = 0.4;
global.molarity = random_range(global.min_molarity, global.max_molarity);
global.total_time = 0;
global.titrant_added = 0;
titrant_settle_time = 0;

global.transparency = 0;
start_unlocked = false;     // Lock timer and burette until user not tapping on screen (preemptive opening of burette)
titrant_added = false;      // Locks complete titration button until titrant has been added
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Main Step Handler

var settle_time = 120;

if (mouse_check_button_released(mb_left)) {
    start_unlocked = true;
}

if (start_unlocked) {
    global.total_time++;
    
    if (mouse_check_button(mb_left) &amp;&amp; !position_meeting(mouse_x, mouse_y, obj_completeButton)) {
        if (!titrant_added) {
            titrant_added = true;
        }
        titrant_settle_time = 0;
        instance_create(room_width / 2 - 2, 280, obj_titrant);
        with (obj_completeButton) {
            instance_destroy();
        }
        with (obj_speechBubble) {
            instance_destroy();
        }
    }
    
    if (!mouse_check_button(mb_left)) {
        titrant_settle_time++;
        
        if (titrant_settle_time == settle_time &amp;&amp; titrant_added) {
            instance_create(200, 740, obj_completeButton);
            instance_create(20, 370, obj_speechBubble);
        }
        
        if (titrant_settle_time &gt;= settle_time) {
            global.total_time--;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
